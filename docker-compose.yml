version: "3"

services:
  minitwit:
    image: vlcr/minitwit:latest
    build:
      context: .
      dockerfile: .deploy/itu-minitwit-go/Dockerfile
    env_file:
      - .env
    environment:
      DB_HOST: database
    restart: on-failure
    depends_on:
      - database
    ports:
      - 8080:8080

  minitwit-api:
    image: vlcr/minitwit-api:latest
    build:
      context: .
      dockerfile: .deploy/itu-minitwit-api/Dockerfile
    env_file:
      - .env
    environment:
      DB_HOST: database
    restart: on-failure
    depends_on:
      - database
    ports:
      - 8081:8080

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:4.5.2
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana

  database:
    image: 'postgres'
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME:-postgres}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASS:-root}
    volumes:
      - database-data:/var/lib/postgresql/data/
    ports:
      - 5432:5432
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'psql postgres://$${POSTGRES_USER}:$${POSTGRES_PASSWORD}@localhost:5432/$${POSTGRES_DB} || exit 1',
        ]

volumes:
  database-data:
  grafana-storage:
