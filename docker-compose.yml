version: "3"

services:
  minitwit:
    image: vlcr/minitwit:latest
    build:
      context: .
      dockerfile: .deploy/itu-minitwit-go/Dockerfile
    env_file:
      - .env
    environment:
      DB_HOST: database
    restart: on-failure
    depends_on:
      - database
    ports:
      - 8080:8080

  minitwit-api:
    image: vlcr/minitwit-api:latest
    build:
      context: .
      dockerfile: .deploy/itu-minitwit-api/Dockerfile
    env_file:
      - .env
    environment:
      DB_HOST: database
    restart: on-failure
    depends_on:
      - database
    ports:
      - 8081:8080

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:4.5.2
    ports:
      - "3000:3000"            
    volumes:
      - grafana-storage:/var/lib/grafana

      
  elasticsearch:
    container_name: elasticsearch
    image: elasticsearch:7.12.0
    environment:
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - ELASTIC_PASSWORD=password
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200
    stdin_open: true
    tty: true
    
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "50"
  kibana:
    container_name: kibana
    image: kibana:7.12.0
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 5601:5601
    environment:
        SERVER_HOST: 0.0.0.0
        ELASTICSEARCH_HOSTS: http://elasticsearch:9200
        ELASTIC_USERNAME: elastic
        ELASTIC_PASSWORD: password
    depends_on:
      - elasticsearch
   
    stdin_open: true
    tty: true
  
    volumes:
      - ./kibana.yml:/usr/share/kibana/config/kibana.yml
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "50"
        
  filebeat:
    user: root
    container_name: filebeat
    image: docker.elastic.co/beats/filebeat:7.12.0
    links:
      - elasticsearch:elasticsearch
    depends_on:
      - elasticsearch
    volumes:
      - /var/run/docker.sock:/host_docker/docker.sock
      - /var/lib/docker:/host_docker/var/lib/docker
      - ./logs:/usr/share/filebeat/logs
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml
    command: ["--strict.perms=false"]
    ulimits:
      memlock:
        soft: -1
        hard: -1
    stdin_open: true
    tty: true
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "50"
  

  database:
    image: 'postgres'
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME:-postgres}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASS:-root}
    volumes:
      - database-data:/var/lib/postgresql/data/
    ports:
      - 5432:5432
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'psql postgres://$${POSTGRES_USER}:$${POSTGRES_PASSWORD}@localhost:5432/$${POSTGRES_DB} || exit 1',
        ]

volumes:
  database-data:
  grafana-storage:
