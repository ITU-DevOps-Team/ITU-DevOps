name: Deploy pipeline

env:
  DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USER }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

on:
  push:
    branches: 
      - development
  workflow_dispatch:
    branches:
      - development

jobs:
  minitwit:
    name: build and push docker image for minitwit
    runs-on: ubuntu-20.04
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: build minitwit image
        run: docker build -f .deploy/itu-minitwit-go/Dockerfile -t $DOCKERHUB_USER/minitwit:latest .
      - name: login to Docker Hub
        uses: docker/login-action@v1.8.0
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: push minitwit image
        run: docker push $DOCKERHUB_USER/minitwit:latest

  minitwit-api:
    name: build and push docker image for minitwit-api
    runs-on: ubuntu-20.04
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: build minitwit-api image
        run: docker build -f .deploy/itu-minitwit-api/Dockerfile -t $DOCKERHUB_USER/minitwit-api:latest .
      - name: login to Docker Hub
        uses: docker/login-action@v1.8.0
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: push minitwit-api image
        run: docker push $DOCKERHUB_USER/minitwit-api:latest

  deploy:
    name: deploy changes to droplet
    needs:
      - minitwit
      - minitwit-api
    runs-on: ubuntu-20.04
    steps:
      - name: multiple command
        uses: appleboy/ssh-action@master
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_PASS: ${{ secrets.DB_PASS }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_SSLMODE: ${{ secrets.DB_SSLMODE }}
        with:
          host: ${{ secrets.HOST }}
          port: ${{ secrets.PORT }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd app
            docker-compose -f ./docker-compose.prod.yml down
            docker-compose -f ./docker-compose.prod.yml pull minitwit minitwit-api
            docker-compose -f ./docker-compose.prod.yml up -d
